# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@





VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
sbin_PROGRAMS =
bin_PROGRAMS =
noinst_PROGRAMS = bin/master$(EXEEXT) bin/agent$(EXEEXT) \
	example/pi$(EXEEXT) example/hello_world$(EXEEXT) \
	example/feeder$(EXEEXT) example/prober$(EXEEXT) \
	example/kmeans$(EXEEXT) example/prime$(EXEEXT) \
	example/operator$(EXEEXT) example/external$(EXEEXT) \
	example/mnist$(EXEEXT) example/reduce_sum$(EXEEXT) \
	app/debs18/debs18$(EXEEXT) unittest/archive$(EXEEXT) \
	unittest/statgrab$(EXEEXT) unittest/webui$(EXEEXT) \
	unittest/ipc$(EXEEXT) unittest/reactor$(EXEEXT) \
	unittest/utility$(EXEEXT) unittest/traits$(EXEEXT) \
	unittest/scheduler$(EXEEXT) unittest/ml$(EXEEXT) \
	unittest/concurrent$(EXEEXT)
pkglibexec_PROGRAMS =
check_PROGRAMS =
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_compiler_version.m4 \
	$(top_srcdir)/m4/ax_count_cpus.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(dist_bin_SCRIPTS) \
	$(dist_check_SCRIPTS) $(dist_pkglibexec_SCRIPTS) \
	$(nobase_dist_pkgdata_DATA) $(include_HEADERS) \
	$(nobase_include_HEADERS) $(nobase_pkginclude_HEADERS) \
	$(pkginclude_HEADERS) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/dtc/config.hpp
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkglibexecdir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkglibexecdir)" \
	"$(DESTDIR)$(sbindir)" "$(DESTDIR)$(pkgdatadir)" \
	"$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
lib_libDtCraft_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_lib_libDtCraft_la_OBJECTS = src/device.lo src/statgrab/statgrab.lo \
	src/csv/csv.lo src/exit.lo src/event/reactor.lo \
	src/event/event.lo src/event/select.lo src/event/epoll.lo \
	src/ipc/socket.lo src/ipc/ipc.lo src/ipc/domain.lo \
	src/ipc/fifo.lo src/ipc/notifier.lo src/ipc/pipe.lo \
	src/ipc/shm.lo src/ipc/streambuf.lo src/utility/os.lo \
	src/utility/http_parser.lo src/utility/table.lo \
	src/ml/naive_bayes.lo src/ml/linear.lo src/ml/optimizer.lo \
	src/ml/dnn.lo src/error.lo src/policy.lo \
	src/protobuf/resource.lo src/protobuf/frontier.lo \
	src/protobuf/taskinfo.lo src/protobuf/protobuf.lo \
	src/protobuf/solution.lo src/protobuf/common.lo \
	src/protobuf/topology.lo src/kernel/container.lo \
	src/kernel/cgroup.lo src/kernel/manager.lo \
	src/kernel/stream.lo src/kernel/scheduler.lo \
	src/kernel/vertex.lo src/kernel/graph.lo src/kernel/master.lo \
	src/kernel/agent.lo src/kernel/executor.lo src/webui/webui.lo
lib_libDtCraft_la_OBJECTS = $(am_lib_libDtCraft_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS) $(pkglibexec_PROGRAMS) \
	$(sbin_PROGRAMS)
am_app_debs18_debs18_OBJECTS = app/debs18/utility.$(OBJEXT) \
	app/debs18/map.$(OBJEXT) app/debs18/debs18.$(OBJEXT) \
	app/debs18/dtr.$(OBJEXT) app/debs18/dnn.$(OBJEXT)
app_debs18_debs18_OBJECTS = $(am_app_debs18_debs18_OBJECTS)
app_debs18_debs18_DEPENDENCIES = lib/libDtCraft.la
am_bin_agent_OBJECTS = main/agent.$(OBJEXT)
bin_agent_OBJECTS = $(am_bin_agent_OBJECTS)
bin_agent_DEPENDENCIES = lib/libDtCraft.la
am_bin_master_OBJECTS = main/master.$(OBJEXT)
bin_master_OBJECTS = $(am_bin_master_OBJECTS)
bin_master_DEPENDENCIES = lib/libDtCraft.la
am_example_external_OBJECTS = example/external.$(OBJEXT)
example_external_OBJECTS = $(am_example_external_OBJECTS)
example_external_DEPENDENCIES = lib/libDtCraft.la
am_example_feeder_OBJECTS = example/feeder.$(OBJEXT)
example_feeder_OBJECTS = $(am_example_feeder_OBJECTS)
example_feeder_DEPENDENCIES = lib/libDtCraft.la
am_example_hello_world_OBJECTS = example/hello_world.$(OBJEXT)
example_hello_world_OBJECTS = $(am_example_hello_world_OBJECTS)
example_hello_world_DEPENDENCIES = lib/libDtCraft.la
am_example_kmeans_OBJECTS = example/kmeans.$(OBJEXT)
example_kmeans_OBJECTS = $(am_example_kmeans_OBJECTS)
example_kmeans_DEPENDENCIES = lib/libDtCraft.la
am_example_mnist_OBJECTS = example/mnist.$(OBJEXT)
example_mnist_OBJECTS = $(am_example_mnist_OBJECTS)
example_mnist_DEPENDENCIES = lib/libDtCraft.la
am_example_operator_OBJECTS = example/operator.$(OBJEXT)
example_operator_OBJECTS = $(am_example_operator_OBJECTS)
example_operator_DEPENDENCIES = lib/libDtCraft.la
am_example_pi_OBJECTS = example/pi.$(OBJEXT)
example_pi_OBJECTS = $(am_example_pi_OBJECTS)
example_pi_DEPENDENCIES = lib/libDtCraft.la
am_example_prime_OBJECTS = example/prime.$(OBJEXT)
example_prime_OBJECTS = $(am_example_prime_OBJECTS)
example_prime_DEPENDENCIES = lib/libDtCraft.la
am_example_prober_OBJECTS = example/prober.$(OBJEXT)
example_prober_OBJECTS = $(am_example_prober_OBJECTS)
example_prober_DEPENDENCIES = lib/libDtCraft.la
am_example_reduce_sum_OBJECTS = example/reduce_sum.$(OBJEXT)
example_reduce_sum_OBJECTS = $(am_example_reduce_sum_OBJECTS)
example_reduce_sum_DEPENDENCIES = lib/libDtCraft.la
am_unittest_archive_OBJECTS = unittest/archive.$(OBJEXT)
unittest_archive_OBJECTS = $(am_unittest_archive_OBJECTS)
am__DEPENDENCIES_1 =
unittest_archive_DEPENDENCIES = lib/libDtCraft.la \
	$(am__DEPENDENCIES_1)
am_unittest_concurrent_OBJECTS = unittest/concurrent.$(OBJEXT)
unittest_concurrent_OBJECTS = $(am_unittest_concurrent_OBJECTS)
unittest_concurrent_DEPENDENCIES = lib/libDtCraft.la \
	$(am__DEPENDENCIES_1)
am_unittest_ipc_OBJECTS = unittest/ipc.$(OBJEXT)
unittest_ipc_OBJECTS = $(am_unittest_ipc_OBJECTS)
unittest_ipc_DEPENDENCIES = lib/libDtCraft.la $(am__DEPENDENCIES_1)
am_unittest_ml_OBJECTS = unittest/ml.$(OBJEXT)
unittest_ml_OBJECTS = $(am_unittest_ml_OBJECTS)
unittest_ml_DEPENDENCIES = lib/libDtCraft.la $(am__DEPENDENCIES_1)
am_unittest_reactor_OBJECTS = unittest/reactor.$(OBJEXT)
unittest_reactor_OBJECTS = $(am_unittest_reactor_OBJECTS)
unittest_reactor_DEPENDENCIES = lib/libDtCraft.la \
	$(am__DEPENDENCIES_1)
am_unittest_scheduler_OBJECTS = unittest/scheduler.$(OBJEXT)
unittest_scheduler_OBJECTS = $(am_unittest_scheduler_OBJECTS)
unittest_scheduler_DEPENDENCIES = lib/libDtCraft.la \
	$(am__DEPENDENCIES_1)
am_unittest_statgrab_OBJECTS = unittest/statgrab.$(OBJEXT)
unittest_statgrab_OBJECTS = $(am_unittest_statgrab_OBJECTS)
unittest_statgrab_DEPENDENCIES = lib/libDtCraft.la \
	$(am__DEPENDENCIES_1)
am_unittest_traits_OBJECTS = unittest/traits.$(OBJEXT)
unittest_traits_OBJECTS = $(am_unittest_traits_OBJECTS)
unittest_traits_DEPENDENCIES = lib/libDtCraft.la $(am__DEPENDENCIES_1)
am_unittest_utility_OBJECTS = unittest/utility.$(OBJEXT)
unittest_utility_OBJECTS = $(am_unittest_utility_OBJECTS)
unittest_utility_DEPENDENCIES = lib/libDtCraft.la \
	$(am__DEPENDENCIES_1)
am_unittest_webui_OBJECTS = unittest/webui.$(OBJEXT)
unittest_webui_OBJECTS = $(am_unittest_webui_OBJECTS)
unittest_webui_DEPENDENCIES = lib/libDtCraft.la $(am__DEPENDENCIES_1)
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_pkglibexec_SCRIPTS) \
	$(nodist_sbin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include/dtc
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(lib_libDtCraft_la_SOURCES) $(app_debs18_debs18_SOURCES) \
	$(bin_agent_SOURCES) $(bin_master_SOURCES) \
	$(example_external_SOURCES) $(example_feeder_SOURCES) \
	$(example_hello_world_SOURCES) $(example_kmeans_SOURCES) \
	$(example_mnist_SOURCES) $(example_operator_SOURCES) \
	$(example_pi_SOURCES) $(example_prime_SOURCES) \
	$(example_prober_SOURCES) $(example_reduce_sum_SOURCES) \
	$(unittest_archive_SOURCES) $(unittest_concurrent_SOURCES) \
	$(unittest_ipc_SOURCES) $(unittest_ml_SOURCES) \
	$(unittest_reactor_SOURCES) $(unittest_scheduler_SOURCES) \
	$(unittest_statgrab_SOURCES) $(unittest_traits_SOURCES) \
	$(unittest_utility_SOURCES) $(unittest_webui_SOURCES)
DIST_SOURCES = $(lib_libDtCraft_la_SOURCES) \
	$(app_debs18_debs18_SOURCES) $(bin_agent_SOURCES) \
	$(bin_master_SOURCES) $(example_external_SOURCES) \
	$(example_feeder_SOURCES) $(example_hello_world_SOURCES) \
	$(example_kmeans_SOURCES) $(example_mnist_SOURCES) \
	$(example_operator_SOURCES) $(example_pi_SOURCES) \
	$(example_prime_SOURCES) $(example_prober_SOURCES) \
	$(example_reduce_sum_SOURCES) $(unittest_archive_SOURCES) \
	$(unittest_concurrent_SOURCES) $(unittest_ipc_SOURCES) \
	$(unittest_ml_SOURCES) $(unittest_reactor_SOURCES) \
	$(unittest_scheduler_SOURCES) $(unittest_statgrab_SOURCES) \
	$(unittest_traits_SOURCES) $(unittest_utility_SOURCES) \
	$(unittest_webui_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(nobase_dist_pkgdata_DATA)
HEADERS = $(include_HEADERS) $(nobase_include_HEADERS) \
	$(nobase_pkginclude_HEADERS) $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope check recheck distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/compile \
	$(top_srcdir)/build-aux/config.guess \
	$(top_srcdir)/build-aux/config.sub \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/install-sh \
	$(top_srcdir)/build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/missing \
	$(top_srcdir)/build-aux/test-driver \
	$(top_srcdir)/include/dtc/config.hpp.in AUTHORS ChangeLog \
	build-aux/compile build-aux/config.guess build-aux/config.sub \
	build-aux/depcomp build-aux/install-sh build-aux/ltmain.sh \
	build-aux/missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@

# DtCraft Package include
CPPFLAGS = @CPPFLAGS@ -Iinclude
CPU_COUNT = @CPU_COUNT@

# Package-related substitution variables.
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@

# CXX flags
CXXFLAGS = @CXXFLAGS@ -std=c++1z -Wall $(PTHREAD_CFLAGS)
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@

# Libraries
LIBS = @LIBS@ -lstdc++fs $(PTHREAD_LIBS)
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEST_LIBS = @TEST_LIBS@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# Automake options.
AUTOMAKE_OPTIONS = foreign

# Make sure that when we re-make ./configure, we get the macros we need.
ACLOCAL_AMFLAGS = -I m4 --install

# Automake directories.
SUBDIRS = .

# Initialize variables here so we can use += operator everywhere else.

# Library definition: lib/libDtCraft.la
lib_LTLIBRARIES = lib/libDtCraft.la
noinst_LTLIBRARIES = 
include_HEADERS = 
pkginclude_HEADERS = 
nobase_include_HEADERS = 
nobase_pkginclude_HEADERS = include/dtc/archive/binary.hpp \
	include/dtc/archive/archive.hpp include/dtc/config.hpp.in \
	include/dtc/device.hpp include/dtc/exit.hpp \
	include/dtc/statgrab/statgrab.hpp include/dtc/error.hpp \
	include/dtc/csv/csv.hpp include/dtc/traits.hpp \
	include/dtc/cell/cell.hpp include/dtc/cell/feeder/feeder.hpp \
	include/dtc/cell/feeder/debs.hpp \
	include/dtc/cell/feeder/mnist.hpp \
	include/dtc/cell/feeder/file.hpp \
	include/dtc/cell/feeder/csv.hpp \
	include/dtc/cell/feeder/socket.hpp include/dtc/cell/ml/dnn.hpp \
	include/dtc/cell/operator.hpp include/dtc/cell/visitor.hpp \
	include/dtc/event/reactor.hpp include/dtc/event/select.hpp \
	include/dtc/event/epoll.hpp include/dtc/event/event.hpp \
	include/dtc/ipc/notifier.hpp include/dtc/ipc/streambuf.hpp \
	include/dtc/ipc/domain.hpp include/dtc/ipc/pipe.hpp \
	include/dtc/ipc/fifo.hpp include/dtc/ipc/ipc.hpp \
	include/dtc/ipc/shm.hpp include/dtc/ipc/socket.hpp \
	include/dtc/headerdef.hpp include/dtc/utility/os.hpp \
	include/dtc/utility/allocator.hpp \
	include/dtc/utility/table.hpp \
	include/dtc/utility/scope_guard.hpp \
	include/dtc/utility/random.hpp include/dtc/utility/mempool.hpp \
	include/dtc/utility/algorithm.hpp \
	include/dtc/utility/http_parser.hpp \
	include/dtc/utility/hash.hpp include/dtc/utility/lambda.hpp \
	include/dtc/utility/literals.hpp \
	include/dtc/utility/lexical_cast.hpp \
	include/dtc/utility/singleton.hpp \
	include/dtc/utility/utility.hpp include/dtc/utility/ios.hpp \
	include/dtc/utility/chrono.hpp include/dtc/utility/uuid.hpp \
	include/dtc/utility/logger.hpp include/dtc/ml/mnist.hpp \
	include/dtc/ml/ml.hpp include/dtc/ml/activation.hpp \
	include/dtc/ml/linear.hpp include/dtc/ml/loss.hpp \
	include/dtc/ml/dnn.hpp include/dtc/ml/optimizer.hpp \
	include/dtc/ml/naive_bayes.hpp include/dtc/stamp-h1 \
	include/dtc/config.hpp include/dtc/config.hpp.in~ \
	include/dtc/unittest/catch.hpp \
	include/dtc/static/threadpool.hpp \
	include/dtc/static/logger.hpp \
	include/dtc/concurrent/shared_guard.hpp \
	include/dtc/concurrent/synchronized.hpp \
	include/dtc/concurrent/concurrent.hpp \
	include/dtc/concurrent/deque.hpp \
	include/dtc/concurrent/mutex.hpp \
	include/dtc/concurrent/fifo.hpp \
	include/dtc/concurrent/unique_guard.hpp \
	include/dtc/concurrent/threadpool.hpp \
	include/dtc/concurrent/queue.hpp \
	include/dtc/protobuf/solution.hpp \
	include/dtc/protobuf/common.hpp \
	include/dtc/protobuf/loadinfo.hpp \
	include/dtc/protobuf/killtask.hpp \
	include/dtc/protobuf/taskinfo.hpp \
	include/dtc/protobuf/protobuf.hpp \
	include/dtc/protobuf/topology.hpp \
	include/dtc/protobuf/resource.hpp \
	include/dtc/protobuf/frontier.hpp \
	include/dtc/protobuf/brokenio.hpp include/dtc/dtc.hpp \
	include/dtc/Eigen/src/SVD/BDCSVD.h \
	include/dtc/Eigen/src/SVD/UpperBidiagonalization.h \
	include/dtc/Eigen/src/SVD/JacobiSVD.h \
	include/dtc/Eigen/src/SVD/JacobiSVD_LAPACKE.h \
	include/dtc/Eigen/src/SVD/SVDBase.h \
	include/dtc/Eigen/src/SparseQR/SparseQR.h \
	include/dtc/Eigen/src/Geometry/OrthoMethods.h \
	include/dtc/Eigen/src/Geometry/Homogeneous.h \
	include/dtc/Eigen/src/Geometry/Rotation2D.h \
	include/dtc/Eigen/src/Geometry/arch/Geometry_SSE.h \
	include/dtc/Eigen/src/Geometry/AngleAxis.h \
	include/dtc/Eigen/src/Geometry/Quaternion.h \
	include/dtc/Eigen/src/Geometry/AlignedBox.h \
	include/dtc/Eigen/src/Geometry/EulerAngles.h \
	include/dtc/Eigen/src/Geometry/RotationBase.h \
	include/dtc/Eigen/src/Geometry/Translation.h \
	include/dtc/Eigen/src/Geometry/Umeyama.h \
	include/dtc/Eigen/src/Geometry/Hyperplane.h \
	include/dtc/Eigen/src/Geometry/Transform.h \
	include/dtc/Eigen/src/Geometry/ParametrizedLine.h \
	include/dtc/Eigen/src/Geometry/Scaling.h \
	include/dtc/Eigen/src/OrderingMethods/Ordering.h \
	include/dtc/Eigen/src/OrderingMethods/Amd.h \
	include/dtc/Eigen/src/OrderingMethods/Eigen_Colamd.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_relax_snode.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_kernel_bmod.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_panel_dfs.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_Structs.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_panel_bmod.h \
	include/dtc/Eigen/src/SparseLU/SparseLUImpl.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_column_dfs.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_Utils.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_gemm_kernel.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_column_bmod.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h \
	include/dtc/Eigen/src/SparseLU/SparseLU.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_pivotL.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_Memory.h \
	include/dtc/Eigen/src/SparseLU/SparseLU_pruneL.h \
	include/dtc/Eigen/src/SuperLUSupport/SuperLUSupport.h \
	include/dtc/Eigen/src/plugins/MatrixCwiseUnaryOps.h \
	include/dtc/Eigen/src/plugins/CommonCwiseUnaryOps.h \
	include/dtc/Eigen/src/plugins/BlockMethods.h \
	include/dtc/Eigen/src/plugins/MatrixCwiseBinaryOps.h \
	include/dtc/Eigen/src/plugins/CommonCwiseBinaryOps.h \
	include/dtc/Eigen/src/plugins/ArrayCwiseUnaryOps.h \
	include/dtc/Eigen/src/plugins/ArrayCwiseBinaryOps.h \
	include/dtc/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h \
	include/dtc/Eigen/src/SparseCholesky/SimplicialCholesky.h \
	include/dtc/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h \
	include/dtc/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h \
	include/dtc/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h \
	include/dtc/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h \
	include/dtc/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h \
	include/dtc/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h \
	include/dtc/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h \
	include/dtc/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h \
	include/dtc/Eigen/src/PardisoSupport/PardisoSupport.h \
	include/dtc/Eigen/src/LU/Determinant.h \
	include/dtc/Eigen/src/LU/PartialPivLU.h \
	include/dtc/Eigen/src/LU/FullPivLU.h \
	include/dtc/Eigen/src/LU/arch/Inverse_SSE.h \
	include/dtc/Eigen/src/LU/PartialPivLU_LAPACKE.h \
	include/dtc/Eigen/src/LU/InverseImpl.h \
	include/dtc/Eigen/src/CholmodSupport/CholmodSupport.h \
	include/dtc/Eigen/src/StlSupport/StdDeque.h \
	include/dtc/Eigen/src/StlSupport/StdList.h \
	include/dtc/Eigen/src/StlSupport/details.h \
	include/dtc/Eigen/src/StlSupport/StdVector.h \
	include/dtc/Eigen/src/Cholesky/LLT.h \
	include/dtc/Eigen/src/Cholesky/LDLT.h \
	include/dtc/Eigen/src/Cholesky/LLT_LAPACKE.h \
	include/dtc/Eigen/src/Householder/HouseholderSequence.h \
	include/dtc/Eigen/src/Householder/BlockHouseholder.h \
	include/dtc/Eigen/src/Householder/Householder.h \
	include/dtc/Eigen/src/UmfPackSupport/UmfPackSupport.h \
	include/dtc/Eigen/src/Jacobi/Jacobi.h \
	include/dtc/Eigen/src/Eigenvalues/Tridiagonalization.h \
	include/dtc/Eigen/src/Eigenvalues/HessenbergDecomposition.h \
	include/dtc/Eigen/src/Eigenvalues/EigenSolver.h \
	include/dtc/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_LAPACKE.h \
	include/dtc/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h \
	include/dtc/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h \
	include/dtc/Eigen/src/Eigenvalues/ComplexSchur_LAPACKE.h \
	include/dtc/Eigen/src/Eigenvalues/RealQZ.h \
	include/dtc/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h \
	include/dtc/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h \
	include/dtc/Eigen/src/Eigenvalues/RealSchur.h \
	include/dtc/Eigen/src/Eigenvalues/ComplexEigenSolver.h \
	include/dtc/Eigen/src/Eigenvalues/RealSchur_LAPACKE.h \
	include/dtc/Eigen/src/Eigenvalues/ComplexSchur.h \
	include/dtc/Eigen/src/Core/BooleanRedux.h \
	include/dtc/Eigen/src/Core/GeneralProduct.h \
	include/dtc/Eigen/src/Core/BandMatrix.h \
	include/dtc/Eigen/src/Core/ReturnByValue.h \
	include/dtc/Eigen/src/Core/Swap.h \
	include/dtc/Eigen/src/Core/Inverse.h \
	include/dtc/Eigen/src/Core/GenericPacketMath.h \
	include/dtc/Eigen/src/Core/ConditionEstimator.h \
	include/dtc/Eigen/src/Core/CwiseTernaryOp.h \
	include/dtc/Eigen/src/Core/DenseCoeffsBase.h \
	include/dtc/Eigen/src/Core/MapBase.h \
	include/dtc/Eigen/src/Core/Diagonal.h \
	include/dtc/Eigen/src/Core/SolveTriangular.h \
	include/dtc/Eigen/src/Core/MathFunctions.h \
	include/dtc/Eigen/src/Core/Matrix.h \
	include/dtc/Eigen/src/Core/DiagonalMatrix.h \
	include/dtc/Eigen/src/Core/Transpose.h \
	include/dtc/Eigen/src/Core/Select.h \
	include/dtc/Eigen/src/Core/NoAlias.h \
	include/dtc/Eigen/src/Core/PermutationMatrix.h \
	include/dtc/Eigen/src/Core/Assign_MKL.h \
	include/dtc/Eigen/src/Core/Assign.h \
	include/dtc/Eigen/src/Core/CommaInitializer.h \
	include/dtc/Eigen/src/Core/AssignEvaluator.h \
	include/dtc/Eigen/src/Core/NestByValue.h \
	include/dtc/Eigen/src/Core/VectorwiseOp.h \
	include/dtc/Eigen/src/Core/MatrixBase.h \
	include/dtc/Eigen/src/Core/Dot.h \
	include/dtc/Eigen/src/Core/arch/CUDA/TypeCasting.h \
	include/dtc/Eigen/src/Core/arch/CUDA/MathFunctions.h \
	include/dtc/Eigen/src/Core/arch/CUDA/Complex.h \
	include/dtc/Eigen/src/Core/arch/CUDA/PacketMath.h \
	include/dtc/Eigen/src/Core/arch/CUDA/Half.h \
	include/dtc/Eigen/src/Core/arch/CUDA/PacketMathHalf.h \
	include/dtc/Eigen/src/Core/arch/ZVector/MathFunctions.h \
	include/dtc/Eigen/src/Core/arch/ZVector/Complex.h \
	include/dtc/Eigen/src/Core/arch/ZVector/PacketMath.h \
	include/dtc/Eigen/src/Core/arch/AVX512/MathFunctions.h \
	include/dtc/Eigen/src/Core/arch/AVX512/PacketMath.h \
	include/dtc/Eigen/src/Core/arch/Default/Settings.h \
	include/dtc/Eigen/src/Core/arch/AltiVec/MathFunctions.h \
	include/dtc/Eigen/src/Core/arch/AltiVec/Complex.h \
	include/dtc/Eigen/src/Core/arch/AltiVec/PacketMath.h \
	include/dtc/Eigen/src/Core/arch/AVX/TypeCasting.h \
	include/dtc/Eigen/src/Core/arch/AVX/MathFunctions.h \
	include/dtc/Eigen/src/Core/arch/AVX/Complex.h \
	include/dtc/Eigen/src/Core/arch/AVX/PacketMath.h \
	include/dtc/Eigen/src/Core/arch/SSE/TypeCasting.h \
	include/dtc/Eigen/src/Core/arch/SSE/MathFunctions.h \
	include/dtc/Eigen/src/Core/arch/SSE/Complex.h \
	include/dtc/Eigen/src/Core/arch/SSE/PacketMath.h \
	include/dtc/Eigen/src/Core/arch/NEON/MathFunctions.h \
	include/dtc/Eigen/src/Core/arch/NEON/Complex.h \
	include/dtc/Eigen/src/Core/arch/NEON/PacketMath.h \
	include/dtc/Eigen/src/Core/TriangularMatrix.h \
	include/dtc/Eigen/src/Core/EigenBase.h \
	include/dtc/Eigen/src/Core/CoreEvaluators.h \
	include/dtc/Eigen/src/Core/SolverBase.h \
	include/dtc/Eigen/src/Core/VectorBlock.h \
	include/dtc/Eigen/src/Core/IO.h \
	include/dtc/Eigen/src/Core/GlobalFunctions.h \
	include/dtc/Eigen/src/Core/Random.h \
	include/dtc/Eigen/src/Core/DiagonalProduct.h \
	include/dtc/Eigen/src/Core/Array.h \
	include/dtc/Eigen/src/Core/Fuzzy.h \
	include/dtc/Eigen/src/Core/SelfCwiseBinaryOp.h \
	include/dtc/Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h \
	include/dtc/Eigen/src/Core/products/GeneralBlockPanelKernel.h \
	include/dtc/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h \
	include/dtc/Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h \
	include/dtc/Eigen/src/Core/products/TriangularSolverMatrix.h \
	include/dtc/Eigen/src/Core/products/SelfadjointProduct.h \
	include/dtc/Eigen/src/Core/products/GeneralMatrixMatrix.h \
	include/dtc/Eigen/src/Core/products/TriangularMatrixVector.h \
	include/dtc/Eigen/src/Core/products/SelfadjointMatrixMatrix.h \
	include/dtc/Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h \
	include/dtc/Eigen/src/Core/products/GeneralMatrixVector.h \
	include/dtc/Eigen/src/Core/products/TriangularMatrixVector_BLAS.h \
	include/dtc/Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h \
	include/dtc/Eigen/src/Core/products/SelfadjointMatrixVector.h \
	include/dtc/Eigen/src/Core/products/TriangularSolverVector.h \
	include/dtc/Eigen/src/Core/products/Parallelizer.h \
	include/dtc/Eigen/src/Core/products/TriangularMatrixMatrix.h \
	include/dtc/Eigen/src/Core/products/SelfadjointRank2Update.h \
	include/dtc/Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h \
	include/dtc/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h \
	include/dtc/Eigen/src/Core/products/GeneralMatrixVector_BLAS.h \
	include/dtc/Eigen/src/Core/StableNorm.h \
	include/dtc/Eigen/src/Core/Transpositions.h \
	include/dtc/Eigen/src/Core/Visitor.h \
	include/dtc/Eigen/src/Core/CoreIterators.h \
	include/dtc/Eigen/src/Core/DenseStorage.h \
	include/dtc/Eigen/src/Core/ForceAlignedAccess.h \
	include/dtc/Eigen/src/Core/CwiseUnaryView.h \
	include/dtc/Eigen/src/Core/functors/NullaryFunctors.h \
	include/dtc/Eigen/src/Core/functors/TernaryFunctors.h \
	include/dtc/Eigen/src/Core/functors/AssignmentFunctors.h \
	include/dtc/Eigen/src/Core/functors/BinaryFunctors.h \
	include/dtc/Eigen/src/Core/functors/UnaryFunctors.h \
	include/dtc/Eigen/src/Core/functors/StlFunctors.h \
	include/dtc/Eigen/src/Core/CwiseNullaryOp.h \
	include/dtc/Eigen/src/Core/PlainObjectBase.h \
	include/dtc/Eigen/src/Core/Reverse.h \
	include/dtc/Eigen/src/Core/CwiseUnaryOp.h \
	include/dtc/Eigen/src/Core/Ref.h \
	include/dtc/Eigen/src/Core/CwiseBinaryOp.h \
	include/dtc/Eigen/src/Core/Map.h \
	include/dtc/Eigen/src/Core/Block.h \
	include/dtc/Eigen/src/Core/NumTraits.h \
	include/dtc/Eigen/src/Core/SelfAdjointView.h \
	include/dtc/Eigen/src/Core/util/BlasUtil.h \
	include/dtc/Eigen/src/Core/util/Macros.h \
	include/dtc/Eigen/src/Core/util/StaticAssert.h \
	include/dtc/Eigen/src/Core/util/XprHelper.h \
	include/dtc/Eigen/src/Core/util/ForwardDeclarations.h \
	include/dtc/Eigen/src/Core/util/Constants.h \
	include/dtc/Eigen/src/Core/util/Memory.h \
	include/dtc/Eigen/src/Core/util/NonMPL2.h \
	include/dtc/Eigen/src/Core/util/ReenableStupidWarnings.h \
	include/dtc/Eigen/src/Core/util/MKL_support.h \
	include/dtc/Eigen/src/Core/util/Meta.h \
	include/dtc/Eigen/src/Core/util/DisableStupidWarnings.h \
	include/dtc/Eigen/src/Core/ProductEvaluators.h \
	include/dtc/Eigen/src/Core/Redux.h \
	include/dtc/Eigen/src/Core/ArrayBase.h \
	include/dtc/Eigen/src/Core/Product.h \
	include/dtc/Eigen/src/Core/ArrayWrapper.h \
	include/dtc/Eigen/src/Core/Solve.h \
	include/dtc/Eigen/src/Core/DenseBase.h \
	include/dtc/Eigen/src/Core/MathFunctionsImpl.h \
	include/dtc/Eigen/src/Core/Stride.h \
	include/dtc/Eigen/src/Core/Replicate.h \
	include/dtc/Eigen/src/QR/CompleteOrthogonalDecomposition.h \
	include/dtc/Eigen/src/QR/FullPivHouseholderQR.h \
	include/dtc/Eigen/src/QR/ColPivHouseholderQR.h \
	include/dtc/Eigen/src/QR/HouseholderQR_LAPACKE.h \
	include/dtc/Eigen/src/QR/HouseholderQR.h \
	include/dtc/Eigen/src/QR/ColPivHouseholderQR_LAPACKE.h \
	include/dtc/Eigen/src/misc/Kernel.h \
	include/dtc/Eigen/src/misc/lapacke.h \
	include/dtc/Eigen/src/misc/RealSvd2x2.h \
	include/dtc/Eigen/src/misc/blas.h \
	include/dtc/Eigen/src/misc/lapacke_mangling.h \
	include/dtc/Eigen/src/misc/lapack.h \
	include/dtc/Eigen/src/misc/Image.h \
	include/dtc/Eigen/src/SparseCore/SparseSolverBase.h \
	include/dtc/Eigen/src/SparseCore/SparseAssign.h \
	include/dtc/Eigen/src/SparseCore/SparseRef.h \
	include/dtc/Eigen/src/SparseCore/SparseRedux.h \
	include/dtc/Eigen/src/SparseCore/SparseFuzzy.h \
	include/dtc/Eigen/src/SparseCore/MappedSparseMatrix.h \
	include/dtc/Eigen/src/SparseCore/SparseDiagonalProduct.h \
	include/dtc/Eigen/src/SparseCore/SparseTriangularView.h \
	include/dtc/Eigen/src/SparseCore/SparseDenseProduct.h \
	include/dtc/Eigen/src/SparseCore/SparseColEtree.h \
	include/dtc/Eigen/src/SparseCore/SparseMatrix.h \
	include/dtc/Eigen/src/SparseCore/SparseTranspose.h \
	include/dtc/Eigen/src/SparseCore/SparseCwiseUnaryOp.h \
	include/dtc/Eigen/src/SparseCore/SparseSparseProductWithPruning.h \
	include/dtc/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h \
	include/dtc/Eigen/src/SparseCore/SparseProduct.h \
	include/dtc/Eigen/src/SparseCore/AmbiVector.h \
	include/dtc/Eigen/src/SparseCore/SparseCompressedBase.h \
	include/dtc/Eigen/src/SparseCore/SparseDot.h \
	include/dtc/Eigen/src/SparseCore/SparseSelfAdjointView.h \
	include/dtc/Eigen/src/SparseCore/SparsePermutation.h \
	include/dtc/Eigen/src/SparseCore/SparseBlock.h \
	include/dtc/Eigen/src/SparseCore/SparseCwiseBinaryOp.h \
	include/dtc/Eigen/src/SparseCore/SparseMatrixBase.h \
	include/dtc/Eigen/src/SparseCore/SparseMap.h \
	include/dtc/Eigen/src/SparseCore/SparseUtil.h \
	include/dtc/Eigen/src/SparseCore/TriangularSolver.h \
	include/dtc/Eigen/src/SparseCore/CompressedStorage.h \
	include/dtc/Eigen/src/SparseCore/SparseView.h \
	include/dtc/Eigen/src/SparseCore/SparseVector.h \
	include/dtc/Eigen/src/PaStiXSupport/PaStiXSupport.h \
	include/dtc/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h \
	include/dtc/Eigen/src/MetisSupport/MetisSupport.h \
	include/dtc/Eigen/SVD include/dtc/Eigen/SparseQR \
	include/dtc/Eigen/Geometry include/dtc/Eigen/OrderingMethods \
	include/dtc/Eigen/SparseLU include/dtc/Eigen/SuperLUSupport \
	include/dtc/Eigen/SparseCholesky include/dtc/Eigen/Dense \
	include/dtc/Eigen/StdList \
	include/dtc/Eigen/IterativeLinearSolvers \
	include/dtc/Eigen/PardisoSupport include/dtc/Eigen/LU \
	include/dtc/Eigen/CholmodSupport include/dtc/Eigen/Cholesky \
	include/dtc/Eigen/Sparse include/dtc/Eigen/StdDeque \
	include/dtc/Eigen/StdVector include/dtc/Eigen/Householder \
	include/dtc/Eigen/UmfPackSupport include/dtc/Eigen/Eigen \
	include/dtc/Eigen/Jacobi include/dtc/Eigen/CMakeLists.txt \
	include/dtc/Eigen/Eigenvalues include/dtc/Eigen/Core \
	include/dtc/Eigen/QR include/dtc/Eigen/SparseCore \
	include/dtc/Eigen/PaStiXSupport include/dtc/Eigen/SPQRSupport \
	include/dtc/Eigen/QtAlignedMalloc \
	include/dtc/Eigen/MetisSupport include/dtc/json/json.hpp \
	include/dtc/macrodef.hpp include/dtc/kernel/executor.hpp \
	include/dtc/kernel/manager.hpp include/dtc/kernel/vertex.hpp \
	include/dtc/kernel/graph.hpp include/dtc/kernel/scheduler.hpp \
	include/dtc/kernel/master.hpp include/dtc/kernel/container.hpp \
	include/dtc/kernel/agent.hpp include/dtc/kernel/cgroup.hpp \
	include/dtc/kernel/stream.hpp include/dtc/policy.hpp \
	include/dtc/webui/webui.hpp
dist_bin_SCRIPTS = 
dist_pkglibexec_SCRIPTS = 
nobase_dist_pkgdata_DATA = 
nodist_sbin_SCRIPTS = 
dist_check_SCRIPTS = 
check_SCRIPTS = 
BUILT_SOURCES = 
CLEANFILES = 

# Add files to the distribution list
EXTRA_DIST = Makefile.sh conf sbin webui benchmark README.md LICENSE
PHONY_TARGETS = 
LDADD = 
TESTS = unittest/archive.sh unittest/statgrab.sh unittest/webui.sh \
	unittest/ipc.sh unittest/reactor.sh unittest/utility.sh \
	unittest/traits.sh unittest/scheduler.sh unittest/ml.sh \
	unittest/concurrent.sh
lib_libDtCraft_la_SOURCES = src/device.cpp src/statgrab/statgrab.cpp \
	src/csv/csv.cpp src/exit.cpp src/event/reactor.cpp \
	src/event/event.cpp src/event/select.cpp src/event/epoll.cpp \
	src/ipc/socket.cpp src/ipc/ipc.cpp src/ipc/domain.cpp \
	src/ipc/fifo.cpp src/ipc/notifier.cpp src/ipc/pipe.cpp \
	src/ipc/shm.cpp src/ipc/streambuf.cpp src/utility/os.cpp \
	src/utility/http_parser.cpp src/utility/table.cpp \
	src/ml/naive_bayes.cpp src/ml/linear.cpp src/ml/optimizer.cpp \
	src/ml/dnn.cpp src/error.cpp src/policy.cpp \
	src/protobuf/resource.cpp src/protobuf/frontier.cpp \
	src/protobuf/taskinfo.cpp src/protobuf/protobuf.cpp \
	src/protobuf/solution.cpp src/protobuf/common.cpp \
	src/protobuf/topology.cpp src/kernel/container.cpp \
	src/kernel/cgroup.cpp src/kernel/manager.cpp \
	src/kernel/stream.cpp src/kernel/scheduler.cpp \
	src/kernel/vertex.cpp src/kernel/graph.cpp \
	src/kernel/master.cpp src/kernel/agent.cpp \
	src/kernel/executor.cpp src/webui/webui.cpp
bin_master_SOURCES = main/master.cpp
bin_master_LDADD = lib/libDtCraft.la
bin_agent_SOURCES = main/agent.cpp
bin_agent_LDADD = lib/libDtCraft.la
example_pi_SOURCES = example/pi.cpp
example_pi_LDADD = lib/libDtCraft.la
example_hello_world_SOURCES = example/hello_world.cpp
example_hello_world_LDADD = lib/libDtCraft.la
example_feeder_SOURCES = example/feeder.cpp
example_feeder_LDADD = lib/libDtCraft.la
example_prober_SOURCES = example/prober.cpp
example_prober_LDADD = lib/libDtCraft.la
example_kmeans_SOURCES = example/kmeans.cpp
example_kmeans_LDADD = lib/libDtCraft.la
example_prime_SOURCES = example/prime.cpp
example_prime_LDADD = lib/libDtCraft.la
example_operator_SOURCES = example/operator.cpp
example_operator_LDADD = lib/libDtCraft.la
example_external_SOURCES = example/external.cpp
example_external_LDADD = lib/libDtCraft.la
example_mnist_SOURCES = example/mnist.cpp
example_mnist_LDADD = lib/libDtCraft.la
example_reduce_sum_SOURCES = example/reduce_sum.cpp
example_reduce_sum_LDADD = lib/libDtCraft.la
app_debs18_debs18_LDADD = lib/libDtCraft.la
app_debs18_debs18_SOURCES = app/debs18/debs18.hpp \
	app/debs18/feeder.hpp app/debs18/utility.cpp \
	app/debs18/map.cpp app/debs18/debs18.cpp app/debs18/dtr.cpp \
	app/debs18/dnn.cpp
unittest_archive_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_archive_SOURCES = unittest/archive.cpp
unittest_statgrab_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_statgrab_SOURCES = unittest/statgrab.cpp
unittest_webui_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_webui_SOURCES = unittest/webui.cpp
unittest_ipc_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_ipc_SOURCES = unittest/ipc.cpp
unittest_reactor_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_reactor_SOURCES = unittest/reactor.cpp
unittest_utility_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_utility_SOURCES = unittest/utility.cpp
unittest_traits_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_traits_SOURCES = unittest/traits.cpp
unittest_scheduler_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_scheduler_SOURCES = unittest/scheduler.cpp
unittest_ml_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_ml_SOURCES = unittest/ml.cpp
unittest_concurrent_LDADD = lib/libDtCraft.la $(TEST_LIBS)
unittest_concurrent_SOURCES = unittest/concurrent.cpp
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

include/dtc/config.hpp: include/dtc/stamp-h1
	@test -f $@ || rm -f include/dtc/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) include/dtc/stamp-h1

include/dtc/stamp-h1: $(top_srcdir)/include/dtc/config.hpp.in $(top_builddir)/config.status
	@rm -f include/dtc/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status include/dtc/config.hpp
$(top_srcdir)/include/dtc/config.hpp.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f include/dtc/stamp-h1
	touch $@

distclean-hdr:
	-rm -f include/dtc/config.hpp include/dtc/stamp-h1

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/device.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/statgrab/$(am__dirstamp):
	@$(MKDIR_P) src/statgrab
	@: > src/statgrab/$(am__dirstamp)
src/statgrab/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/statgrab/$(DEPDIR)
	@: > src/statgrab/$(DEPDIR)/$(am__dirstamp)
src/statgrab/statgrab.lo: src/statgrab/$(am__dirstamp) \
	src/statgrab/$(DEPDIR)/$(am__dirstamp)
src/csv/$(am__dirstamp):
	@$(MKDIR_P) src/csv
	@: > src/csv/$(am__dirstamp)
src/csv/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/csv/$(DEPDIR)
	@: > src/csv/$(DEPDIR)/$(am__dirstamp)
src/csv/csv.lo: src/csv/$(am__dirstamp) \
	src/csv/$(DEPDIR)/$(am__dirstamp)
src/exit.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/event/$(am__dirstamp):
	@$(MKDIR_P) src/event
	@: > src/event/$(am__dirstamp)
src/event/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/event/$(DEPDIR)
	@: > src/event/$(DEPDIR)/$(am__dirstamp)
src/event/reactor.lo: src/event/$(am__dirstamp) \
	src/event/$(DEPDIR)/$(am__dirstamp)
src/event/event.lo: src/event/$(am__dirstamp) \
	src/event/$(DEPDIR)/$(am__dirstamp)
src/event/select.lo: src/event/$(am__dirstamp) \
	src/event/$(DEPDIR)/$(am__dirstamp)
src/event/epoll.lo: src/event/$(am__dirstamp) \
	src/event/$(DEPDIR)/$(am__dirstamp)
src/ipc/$(am__dirstamp):
	@$(MKDIR_P) src/ipc
	@: > src/ipc/$(am__dirstamp)
src/ipc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/ipc/$(DEPDIR)
	@: > src/ipc/$(DEPDIR)/$(am__dirstamp)
src/ipc/socket.lo: src/ipc/$(am__dirstamp) \
	src/ipc/$(DEPDIR)/$(am__dirstamp)
src/ipc/ipc.lo: src/ipc/$(am__dirstamp) \
	src/ipc/$(DEPDIR)/$(am__dirstamp)
src/ipc/domain.lo: src/ipc/$(am__dirstamp) \
	src/ipc/$(DEPDIR)/$(am__dirstamp)
src/ipc/fifo.lo: src/ipc/$(am__dirstamp) \
	src/ipc/$(DEPDIR)/$(am__dirstamp)
src/ipc/notifier.lo: src/ipc/$(am__dirstamp) \
	src/ipc/$(DEPDIR)/$(am__dirstamp)
src/ipc/pipe.lo: src/ipc/$(am__dirstamp) \
	src/ipc/$(DEPDIR)/$(am__dirstamp)
src/ipc/shm.lo: src/ipc/$(am__dirstamp) \
	src/ipc/$(DEPDIR)/$(am__dirstamp)
src/ipc/streambuf.lo: src/ipc/$(am__dirstamp) \
	src/ipc/$(DEPDIR)/$(am__dirstamp)
src/utility/$(am__dirstamp):
	@$(MKDIR_P) src/utility
	@: > src/utility/$(am__dirstamp)
src/utility/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/utility/$(DEPDIR)
	@: > src/utility/$(DEPDIR)/$(am__dirstamp)
src/utility/os.lo: src/utility/$(am__dirstamp) \
	src/utility/$(DEPDIR)/$(am__dirstamp)
src/utility/http_parser.lo: src/utility/$(am__dirstamp) \
	src/utility/$(DEPDIR)/$(am__dirstamp)
src/utility/table.lo: src/utility/$(am__dirstamp) \
	src/utility/$(DEPDIR)/$(am__dirstamp)
src/ml/$(am__dirstamp):
	@$(MKDIR_P) src/ml
	@: > src/ml/$(am__dirstamp)
src/ml/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/ml/$(DEPDIR)
	@: > src/ml/$(DEPDIR)/$(am__dirstamp)
src/ml/naive_bayes.lo: src/ml/$(am__dirstamp) \
	src/ml/$(DEPDIR)/$(am__dirstamp)
src/ml/linear.lo: src/ml/$(am__dirstamp) \
	src/ml/$(DEPDIR)/$(am__dirstamp)
src/ml/optimizer.lo: src/ml/$(am__dirstamp) \
	src/ml/$(DEPDIR)/$(am__dirstamp)
src/ml/dnn.lo: src/ml/$(am__dirstamp) src/ml/$(DEPDIR)/$(am__dirstamp)
src/error.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/policy.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/protobuf/$(am__dirstamp):
	@$(MKDIR_P) src/protobuf
	@: > src/protobuf/$(am__dirstamp)
src/protobuf/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protobuf/$(DEPDIR)
	@: > src/protobuf/$(DEPDIR)/$(am__dirstamp)
src/protobuf/resource.lo: src/protobuf/$(am__dirstamp) \
	src/protobuf/$(DEPDIR)/$(am__dirstamp)
src/protobuf/frontier.lo: src/protobuf/$(am__dirstamp) \
	src/protobuf/$(DEPDIR)/$(am__dirstamp)
src/protobuf/taskinfo.lo: src/protobuf/$(am__dirstamp) \
	src/protobuf/$(DEPDIR)/$(am__dirstamp)
src/protobuf/protobuf.lo: src/protobuf/$(am__dirstamp) \
	src/protobuf/$(DEPDIR)/$(am__dirstamp)
src/protobuf/solution.lo: src/protobuf/$(am__dirstamp) \
	src/protobuf/$(DEPDIR)/$(am__dirstamp)
src/protobuf/common.lo: src/protobuf/$(am__dirstamp) \
	src/protobuf/$(DEPDIR)/$(am__dirstamp)
src/protobuf/topology.lo: src/protobuf/$(am__dirstamp) \
	src/protobuf/$(DEPDIR)/$(am__dirstamp)
src/kernel/$(am__dirstamp):
	@$(MKDIR_P) src/kernel
	@: > src/kernel/$(am__dirstamp)
src/kernel/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/kernel/$(DEPDIR)
	@: > src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/container.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/cgroup.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/manager.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/stream.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/scheduler.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/vertex.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/graph.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/master.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/agent.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/kernel/executor.lo: src/kernel/$(am__dirstamp) \
	src/kernel/$(DEPDIR)/$(am__dirstamp)
src/webui/$(am__dirstamp):
	@$(MKDIR_P) src/webui
	@: > src/webui/$(am__dirstamp)
src/webui/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/webui/$(DEPDIR)
	@: > src/webui/$(DEPDIR)/$(am__dirstamp)
src/webui/webui.lo: src/webui/$(am__dirstamp) \
	src/webui/$(DEPDIR)/$(am__dirstamp)
lib/$(am__dirstamp):
	@$(MKDIR_P) lib
	@: > lib/$(am__dirstamp)

lib/libDtCraft.la: $(lib_libDtCraft_la_OBJECTS) $(lib_libDtCraft_la_DEPENDENCIES) $(EXTRA_lib_libDtCraft_la_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(lib_libDtCraft_la_OBJECTS) $(lib_libDtCraft_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-pkglibexecPROGRAMS: $(pkglibexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(pkglibexec_PROGRAMS)'; test -n "$(pkglibexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(pkglibexecdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(pkglibexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-pkglibexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglibexec_PROGRAMS)'; test -n "$(pkglibexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkglibexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkglibexecdir)" && rm -f $$files

clean-pkglibexecPROGRAMS:
	@list='$(pkglibexec_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
app/debs18/$(am__dirstamp):
	@$(MKDIR_P) app/debs18
	@: > app/debs18/$(am__dirstamp)
app/debs18/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) app/debs18/$(DEPDIR)
	@: > app/debs18/$(DEPDIR)/$(am__dirstamp)
app/debs18/utility.$(OBJEXT): app/debs18/$(am__dirstamp) \
	app/debs18/$(DEPDIR)/$(am__dirstamp)
app/debs18/map.$(OBJEXT): app/debs18/$(am__dirstamp) \
	app/debs18/$(DEPDIR)/$(am__dirstamp)
app/debs18/debs18.$(OBJEXT): app/debs18/$(am__dirstamp) \
	app/debs18/$(DEPDIR)/$(am__dirstamp)
app/debs18/dtr.$(OBJEXT): app/debs18/$(am__dirstamp) \
	app/debs18/$(DEPDIR)/$(am__dirstamp)
app/debs18/dnn.$(OBJEXT): app/debs18/$(am__dirstamp) \
	app/debs18/$(DEPDIR)/$(am__dirstamp)

app/debs18/debs18$(EXEEXT): $(app_debs18_debs18_OBJECTS) $(app_debs18_debs18_DEPENDENCIES) $(EXTRA_app_debs18_debs18_DEPENDENCIES) app/debs18/$(am__dirstamp)
	@rm -f app/debs18/debs18$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(app_debs18_debs18_OBJECTS) $(app_debs18_debs18_LDADD) $(LIBS)
main/$(am__dirstamp):
	@$(MKDIR_P) main
	@: > main/$(am__dirstamp)
main/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) main/$(DEPDIR)
	@: > main/$(DEPDIR)/$(am__dirstamp)
main/agent.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
bin/$(am__dirstamp):
	@$(MKDIR_P) bin
	@: > bin/$(am__dirstamp)

bin/agent$(EXEEXT): $(bin_agent_OBJECTS) $(bin_agent_DEPENDENCIES) $(EXTRA_bin_agent_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/agent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bin_agent_OBJECTS) $(bin_agent_LDADD) $(LIBS)
main/master.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)

bin/master$(EXEEXT): $(bin_master_OBJECTS) $(bin_master_DEPENDENCIES) $(EXTRA_bin_master_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/master$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bin_master_OBJECTS) $(bin_master_LDADD) $(LIBS)
example/$(am__dirstamp):
	@$(MKDIR_P) example
	@: > example/$(am__dirstamp)
example/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) example/$(DEPDIR)
	@: > example/$(DEPDIR)/$(am__dirstamp)
example/external.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/external$(EXEEXT): $(example_external_OBJECTS) $(example_external_DEPENDENCIES) $(EXTRA_example_external_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/external$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_external_OBJECTS) $(example_external_LDADD) $(LIBS)
example/feeder.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/feeder$(EXEEXT): $(example_feeder_OBJECTS) $(example_feeder_DEPENDENCIES) $(EXTRA_example_feeder_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/feeder$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_feeder_OBJECTS) $(example_feeder_LDADD) $(LIBS)
example/hello_world.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/hello_world$(EXEEXT): $(example_hello_world_OBJECTS) $(example_hello_world_DEPENDENCIES) $(EXTRA_example_hello_world_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/hello_world$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_hello_world_OBJECTS) $(example_hello_world_LDADD) $(LIBS)
example/kmeans.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/kmeans$(EXEEXT): $(example_kmeans_OBJECTS) $(example_kmeans_DEPENDENCIES) $(EXTRA_example_kmeans_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/kmeans$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_kmeans_OBJECTS) $(example_kmeans_LDADD) $(LIBS)
example/mnist.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/mnist$(EXEEXT): $(example_mnist_OBJECTS) $(example_mnist_DEPENDENCIES) $(EXTRA_example_mnist_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/mnist$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_mnist_OBJECTS) $(example_mnist_LDADD) $(LIBS)
example/operator.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/operator$(EXEEXT): $(example_operator_OBJECTS) $(example_operator_DEPENDENCIES) $(EXTRA_example_operator_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/operator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_operator_OBJECTS) $(example_operator_LDADD) $(LIBS)
example/pi.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/pi$(EXEEXT): $(example_pi_OBJECTS) $(example_pi_DEPENDENCIES) $(EXTRA_example_pi_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/pi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_pi_OBJECTS) $(example_pi_LDADD) $(LIBS)
example/prime.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/prime$(EXEEXT): $(example_prime_OBJECTS) $(example_prime_DEPENDENCIES) $(EXTRA_example_prime_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/prime$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_prime_OBJECTS) $(example_prime_LDADD) $(LIBS)
example/prober.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/prober$(EXEEXT): $(example_prober_OBJECTS) $(example_prober_DEPENDENCIES) $(EXTRA_example_prober_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/prober$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_prober_OBJECTS) $(example_prober_LDADD) $(LIBS)
example/reduce_sum.$(OBJEXT): example/$(am__dirstamp) \
	example/$(DEPDIR)/$(am__dirstamp)

example/reduce_sum$(EXEEXT): $(example_reduce_sum_OBJECTS) $(example_reduce_sum_DEPENDENCIES) $(EXTRA_example_reduce_sum_DEPENDENCIES) example/$(am__dirstamp)
	@rm -f example/reduce_sum$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(example_reduce_sum_OBJECTS) $(example_reduce_sum_LDADD) $(LIBS)
unittest/$(am__dirstamp):
	@$(MKDIR_P) unittest
	@: > unittest/$(am__dirstamp)
unittest/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) unittest/$(DEPDIR)
	@: > unittest/$(DEPDIR)/$(am__dirstamp)
unittest/archive.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/archive$(EXEEXT): $(unittest_archive_OBJECTS) $(unittest_archive_DEPENDENCIES) $(EXTRA_unittest_archive_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/archive$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_archive_OBJECTS) $(unittest_archive_LDADD) $(LIBS)
unittest/concurrent.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/concurrent$(EXEEXT): $(unittest_concurrent_OBJECTS) $(unittest_concurrent_DEPENDENCIES) $(EXTRA_unittest_concurrent_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/concurrent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_concurrent_OBJECTS) $(unittest_concurrent_LDADD) $(LIBS)
unittest/ipc.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/ipc$(EXEEXT): $(unittest_ipc_OBJECTS) $(unittest_ipc_DEPENDENCIES) $(EXTRA_unittest_ipc_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/ipc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_ipc_OBJECTS) $(unittest_ipc_LDADD) $(LIBS)
unittest/ml.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/ml$(EXEEXT): $(unittest_ml_OBJECTS) $(unittest_ml_DEPENDENCIES) $(EXTRA_unittest_ml_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/ml$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_ml_OBJECTS) $(unittest_ml_LDADD) $(LIBS)
unittest/reactor.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/reactor$(EXEEXT): $(unittest_reactor_OBJECTS) $(unittest_reactor_DEPENDENCIES) $(EXTRA_unittest_reactor_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/reactor$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_reactor_OBJECTS) $(unittest_reactor_LDADD) $(LIBS)
unittest/scheduler.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/scheduler$(EXEEXT): $(unittest_scheduler_OBJECTS) $(unittest_scheduler_DEPENDENCIES) $(EXTRA_unittest_scheduler_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/scheduler$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_scheduler_OBJECTS) $(unittest_scheduler_LDADD) $(LIBS)
unittest/statgrab.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/statgrab$(EXEEXT): $(unittest_statgrab_OBJECTS) $(unittest_statgrab_DEPENDENCIES) $(EXTRA_unittest_statgrab_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/statgrab$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_statgrab_OBJECTS) $(unittest_statgrab_LDADD) $(LIBS)
unittest/traits.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/traits$(EXEEXT): $(unittest_traits_OBJECTS) $(unittest_traits_DEPENDENCIES) $(EXTRA_unittest_traits_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/traits$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_traits_OBJECTS) $(unittest_traits_LDADD) $(LIBS)
unittest/utility.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/utility$(EXEEXT): $(unittest_utility_OBJECTS) $(unittest_utility_DEPENDENCIES) $(EXTRA_unittest_utility_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/utility$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_utility_OBJECTS) $(unittest_utility_LDADD) $(LIBS)
unittest/webui.$(OBJEXT): unittest/$(am__dirstamp) \
	unittest/$(DEPDIR)/$(am__dirstamp)

unittest/webui$(EXEEXT): $(unittest_webui_OBJECTS) $(unittest_webui_DEPENDENCIES) $(EXTRA_unittest_webui_DEPENDENCIES) unittest/$(am__dirstamp)
	@rm -f unittest/webui$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(unittest_webui_OBJECTS) $(unittest_webui_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-dist_pkglibexecSCRIPTS: $(dist_pkglibexec_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkglibexec_SCRIPTS)'; test -n "$(pkglibexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibexecdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(pkglibexecdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(pkglibexecdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_pkglibexecSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkglibexec_SCRIPTS)'; test -n "$(pkglibexecdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(pkglibexecdir)'; $(am__uninstall_files_from_dir)
install-nodist_sbinSCRIPTS: $(nodist_sbin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_sbin_SCRIPTS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-nodist_sbinSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_sbin_SCRIPTS)'; test -n "$(sbindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(sbindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f app/debs18/*.$(OBJEXT)
	-rm -f example/*.$(OBJEXT)
	-rm -f main/*.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f src/*.lo
	-rm -f src/csv/*.$(OBJEXT)
	-rm -f src/csv/*.lo
	-rm -f src/event/*.$(OBJEXT)
	-rm -f src/event/*.lo
	-rm -f src/ipc/*.$(OBJEXT)
	-rm -f src/ipc/*.lo
	-rm -f src/kernel/*.$(OBJEXT)
	-rm -f src/kernel/*.lo
	-rm -f src/ml/*.$(OBJEXT)
	-rm -f src/ml/*.lo
	-rm -f src/protobuf/*.$(OBJEXT)
	-rm -f src/protobuf/*.lo
	-rm -f src/statgrab/*.$(OBJEXT)
	-rm -f src/statgrab/*.lo
	-rm -f src/utility/*.$(OBJEXT)
	-rm -f src/utility/*.lo
	-rm -f src/webui/*.$(OBJEXT)
	-rm -f src/webui/*.lo
	-rm -f unittest/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@app/debs18/$(DEPDIR)/debs18.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@app/debs18/$(DEPDIR)/dnn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@app/debs18/$(DEPDIR)/dtr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@app/debs18/$(DEPDIR)/map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@app/debs18/$(DEPDIR)/utility.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/external.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/feeder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/hello_world.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/kmeans.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/mnist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/operator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/pi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/prime.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/prober.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@example/$(DEPDIR)/reduce_sum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/agent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/master.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/device.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/exit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/policy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/csv/$(DEPDIR)/csv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/event/$(DEPDIR)/epoll.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/event/$(DEPDIR)/event.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/event/$(DEPDIR)/reactor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/event/$(DEPDIR)/select.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ipc/$(DEPDIR)/domain.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ipc/$(DEPDIR)/fifo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ipc/$(DEPDIR)/ipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ipc/$(DEPDIR)/notifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ipc/$(DEPDIR)/pipe.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ipc/$(DEPDIR)/shm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ipc/$(DEPDIR)/socket.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ipc/$(DEPDIR)/streambuf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/agent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/cgroup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/container.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/executor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/graph.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/manager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/master.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/scheduler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/stream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/kernel/$(DEPDIR)/vertex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ml/$(DEPDIR)/dnn.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ml/$(DEPDIR)/linear.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ml/$(DEPDIR)/naive_bayes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ml/$(DEPDIR)/optimizer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protobuf/$(DEPDIR)/common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protobuf/$(DEPDIR)/frontier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protobuf/$(DEPDIR)/protobuf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protobuf/$(DEPDIR)/resource.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protobuf/$(DEPDIR)/solution.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protobuf/$(DEPDIR)/taskinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protobuf/$(DEPDIR)/topology.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/statgrab/$(DEPDIR)/statgrab.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utility/$(DEPDIR)/http_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utility/$(DEPDIR)/os.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utility/$(DEPDIR)/table.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/webui/$(DEPDIR)/webui.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/archive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/concurrent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/ipc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/ml.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/reactor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/scheduler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/statgrab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/traits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/utility.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unittest/$(DEPDIR)/webui.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf app/debs18/.libs app/debs18/_libs
	-rm -rf bin/.libs bin/_libs
	-rm -rf example/.libs example/_libs
	-rm -rf lib/.libs lib/_libs
	-rm -rf src/.libs src/_libs
	-rm -rf src/csv/.libs src/csv/_libs
	-rm -rf src/event/.libs src/event/_libs
	-rm -rf src/ipc/.libs src/ipc/_libs
	-rm -rf src/kernel/.libs src/kernel/_libs
	-rm -rf src/ml/.libs src/ml/_libs
	-rm -rf src/protobuf/.libs src/protobuf/_libs
	-rm -rf src/statgrab/.libs src/statgrab/_libs
	-rm -rf src/utility/.libs src/utility/_libs
	-rm -rf src/webui/.libs src/webui/_libs
	-rm -rf unittest/.libs unittest/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-nobase_dist_pkgdataDATA: $(nobase_dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nobase_dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(pkgdatadir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(pkgdatadir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-nobase_pkgincludeHEADERS: $(nobase_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(pkgincludedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(pkgincludedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_SCRIPTS) $(dist_check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
unittest/archive.sh.log: unittest/archive.sh
	@p='unittest/archive.sh'; \
	b='unittest/archive.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unittest/statgrab.sh.log: unittest/statgrab.sh
	@p='unittest/statgrab.sh'; \
	b='unittest/statgrab.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unittest/webui.sh.log: unittest/webui.sh
	@p='unittest/webui.sh'; \
	b='unittest/webui.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unittest/ipc.sh.log: unittest/ipc.sh
	@p='unittest/ipc.sh'; \
	b='unittest/ipc.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unittest/reactor.sh.log: unittest/reactor.sh
	@p='unittest/reactor.sh'; \
	b='unittest/reactor.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unittest/utility.sh.log: unittest/utility.sh
	@p='unittest/utility.sh'; \
	b='unittest/utility.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unittest/traits.sh.log: unittest/traits.sh
	@p='unittest/traits.sh'; \
	b='unittest/traits.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unittest/scheduler.sh.log: unittest/scheduler.sh
	@p='unittest/scheduler.sh'; \
	b='unittest/scheduler.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unittest/ml.sh.log: unittest/ml.sh
	@p='unittest/ml.sh'; \
	b='unittest/ml.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unittest/concurrent.sh.log: unittest/concurrent.sh
	@p='unittest/concurrent.sh'; \
	b='unittest/concurrent.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS) \
	  $(dist_check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		$(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkglibexecdir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkglibexecdir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f app/debs18/$(DEPDIR)/$(am__dirstamp)
	-rm -f app/debs18/$(am__dirstamp)
	-rm -f bin/$(am__dirstamp)
	-rm -f example/$(DEPDIR)/$(am__dirstamp)
	-rm -f example/$(am__dirstamp)
	-rm -f lib/$(am__dirstamp)
	-rm -f main/$(DEPDIR)/$(am__dirstamp)
	-rm -f main/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/csv/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/csv/$(am__dirstamp)
	-rm -f src/event/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/event/$(am__dirstamp)
	-rm -f src/ipc/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/ipc/$(am__dirstamp)
	-rm -f src/kernel/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/kernel/$(am__dirstamp)
	-rm -f src/ml/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/ml/$(am__dirstamp)
	-rm -f src/protobuf/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protobuf/$(am__dirstamp)
	-rm -f src/statgrab/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/statgrab/$(am__dirstamp)
	-rm -f src/utility/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/utility/$(am__dirstamp)
	-rm -f src/webui/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/webui/$(am__dirstamp)
	-rm -f unittest/$(DEPDIR)/$(am__dirstamp)
	-rm -f unittest/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	clean-pkglibexecPROGRAMS clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf app/debs18/$(DEPDIR) example/$(DEPDIR) main/$(DEPDIR) src/$(DEPDIR) src/csv/$(DEPDIR) src/event/$(DEPDIR) src/ipc/$(DEPDIR) src/kernel/$(DEPDIR) src/ml/$(DEPDIR) src/protobuf/$(DEPDIR) src/statgrab/$(DEPDIR) src/utility/$(DEPDIR) src/webui/$(DEPDIR) unittest/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS \
	install-nobase_dist_pkgdataDATA install-nobase_includeHEADERS \
	install-nobase_pkgincludeHEADERS install-pkgincludeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS \
	install-dist_pkglibexecSCRIPTS install-libLTLIBRARIES \
	install-nodist_sbinSCRIPTS install-pkglibexecPROGRAMS \
	install-sbinPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf app/debs18/$(DEPDIR) example/$(DEPDIR) main/$(DEPDIR) src/$(DEPDIR) src/csv/$(DEPDIR) src/event/$(DEPDIR) src/ipc/$(DEPDIR) src/kernel/$(DEPDIR) src/ml/$(DEPDIR) src/protobuf/$(DEPDIR) src/statgrab/$(DEPDIR) src/utility/$(DEPDIR) src/webui/$(DEPDIR) unittest/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-dist_pkglibexecSCRIPTS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-nobase_dist_pkgdataDATA \
	uninstall-nobase_includeHEADERS \
	uninstall-nobase_pkgincludeHEADERS \
	uninstall-nodist_sbinSCRIPTS uninstall-pkgincludeHEADERS \
	uninstall-pkglibexecPROGRAMS uninstall-sbinPROGRAMS

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-TESTS check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-cscope clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	clean-pkglibexecPROGRAMS clean-sbinPROGRAMS cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_binSCRIPTS \
	install-dist_pkglibexecSCRIPTS install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nobase_dist_pkgdataDATA install-nobase_includeHEADERS \
	install-nobase_pkgincludeHEADERS install-nodist_sbinSCRIPTS \
	install-pdf install-pdf-am install-pkgincludeHEADERS \
	install-pkglibexecPROGRAMS install-ps install-ps-am \
	install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-dist_pkglibexecSCRIPTS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-nobase_dist_pkgdataDATA \
	uninstall-nobase_includeHEADERS \
	uninstall-nobase_pkgincludeHEADERS \
	uninstall-nodist_sbinSCRIPTS uninstall-pkgincludeHEADERS \
	uninstall-pkglibexecPROGRAMS uninstall-sbinPROGRAMS

.PRECIOUS: Makefile


# Regression 
regression: all-am
	@for t in $(TESTS); do $$t -d yes; done

# Clean hook
clean-local:
	@find . -name ._\* -delete

# Project-specific targets
echo_CXX:
	@echo $(CXX)

echo_CPPFLAGS:
	@echo $(CPPFLAGS)

echo_CXXFLAGS:
	@echo $(CXXFLAGS)

echo_LIBS:
	@echo $(LIBS)

echo_TEST_LIBS:
	@echo $(TEST_LIBS)

echo_DEFS:
	@echo $(DEFS)

echo_bin_PROGRAMS:
	@echo $(bin_PROGRAMS)

echo_sbin_PROGRAMS:
	@echo $(sbin_PROGRAMS)

echo_check_PROGRAMS:
	@echo $(check_PROGRAMS)

echo_check_SCRIPTS:
	@echo $(check_SCRIPTS)

echo_lib_LTLIBRARIES:
	@echo $(lib_LTLIBRARIES)

echo_prefix:
	@echo $(prefix)

echo_builddir:
	@echo $(builddir)

echo_abs_builddir:
	@echo $(abs_builddir)

echo_top_builddir:
	@echo $(top_builddir)

echo_abs_top_builddir:
	@echo $(abs_top_builddir)

echo_top_build_prefix:
	@echo $(top_build_prefix)

echo_srcdir:
	@echo $(srcdir)

echo_abs_srcdir:
	@echo $(abs_srcdir)

echo_top_srcdir:
	@echo $(top_srcdir)

echo_abs_top_srcdir:
	@echo $(abs_top_srcdir)

echo_bindir:
	@echo $(bindir)

echo_sbindir:
	@echo $(sbindir)

echo_docdir:
	@echo $(docdir)

echo_exec_prefix:
	@echo $(exec_prefix)

echo_libdir:
	@echo $(libdir)

echo_pkglibdir:
	@echo $(pkglibdir)

echo_includedir:
	@echo $(includedir)

echo_pkgincludedir:
	@echo $(pkgincludedir)

echo_libexecdir:
	@echo $(libexecdir)

echo_datadir:
	@echo $(datadir)

echo_OMP_CFLAGS:
	@echo $(OPENMP_CFLAGS)

echo_OMP_CXXFLAGS:
	@echo $(OPENMP_CXXFLAGS)

echo_BOOST_CPPFLAGS:
	@echo $(BOOST_CPPFLAGS)

echo_CPU_COUNT:
	@echo $(CPU_COUNT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
